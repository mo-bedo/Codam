version: "3.8"

services:
  frontend:
    container_name: pong-frontend
    build: ./frontend/
    restart: always
    env_file:
      - .env
    environment:
      - VITE_CLIENT_UID=${CLIENT_UID}
      - VITE_DOMAIN=${DOMAIN}
    networks:
      - pong-network
    volumes:
      - ./frontend/volume:/home/frontend-volume
  backend:
    container_name: pong-backend
    build: ./backend/
    restart: always
    env_file:
      - .env
    networks:
      - pong-network
    volumes:
      - ./backend/volume:/home/backend-volume
  postgres_db:
    container_name: pong-database
    build: ./database/
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_DB_HOST=${POSTGRES_DB_HOST}
      - POSTGRES_DB_PORT=${POSTGRES_DB_PORT}
      - PONG_DB_USER=${PONG_DB_USER}
      - PONG_DB_PASSWORD=${PONG_DB_PASSWORD}
    ports:
      - 5432:5432
    networks:
      - pong-network
    volumes:
      - database:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - pong-network
  nginx:
    container_name: pong-nginx
    build: ./nginx/
    restart: always
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    networks:
      - pong-network
networks: # TODO: remove?
    pong-network:
        driver: bridge
volumes:
    database:
